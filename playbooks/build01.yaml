---
#
# Example play to build and install OpenAFS from source on
# RedHat and Debian based machines.
#
# * builds the server and client binaries in one build step
# * configure options for RedHat or Debian based hosts
# * installs the binaries on the target system after the build completes
# * logs of the build and installation are saved on the remote
#   system in the `$HOME/src/openafs/.ansible` directory.
# * run with -v to show the build and install results during the play
#
- name: Build and install OpenAFS from source
  hosts: "{{ afs_devel | default('afs_cell') }}"
  pre_tasks:
    - assert:
        that: ansible_os_family in ['RedHat', 'Debian']
  roles:
    - openafs_devel
  tasks:
    - name: Checkout source
      git:
        repo: https://github.com/openafs/openafs.git
        dest: ~/src/openafs
        version: master
      register: checkout_results

    - name: Build OpenAFS binaries for RHEL
      when: ansible_os_family == 'RedHat'
      block:
        - name: Build OpenAFS binaries for RHEL
          openafs_build:
            state: kernel_module_built
            projectdir: ~/src/openafs
            clean: "{{ checkout_results.changed }}"
            target: install
            destdir: packaging/dest
            configure_options:
              - prefix: /usr
                bindir: /usr/bin
                libdir: /usr/lib64
                sbindir: /usr/sbin
                enable:
                  - debug
                  - redhat-buildsys
                  - transarc-paths
                  - kernel-module
                disable:
                  - strip_binaries
                with:
                  - krb5
                  - linux-kernel-packaging
                  - swig
          register: build_results

        - name: Build results for RedHat
          debug:
            var: build_results
            verbosity: 1

        - name: Install OpenAFS binaries
          become: yes
          openafs_install:
            destdir: "{{ build_results.destdir }}"
            dirs: "{{ build_results.dirs }}"
            logdir: /var/tmp/
          register: install_results

        - name: Install results
          debug:
            var: install_results
            verbosity: 1

    - name: Build OpenAFS binaries for Debian
      when: ansible_os_family == 'Debian'
      block:
        - name: Build OpenAFS binaries for Debian
          openafs_build:
            state: kernel_module_built
            projectdir: ~/src/openafs
            clean: "{{ checkout_results.changed }}"
            target: install
            destdir: /var/tmp/openafs/dest
            configure_options:
              - prefix: /
                enable:
                  - debug
                  - debug-lwp
                  - debug-kernel
                disable: linux-syscall-probing
                with: linux-kernel-packaging
                without: swig
          register: build_results

        - name: Build results for Debian
          debug:
            var: build_results
            verbosity: 1

        - name: Install OpenAFS binaries
          become: yes
          openafs_install:
            destdir: "{{ build_results.destdir }}"
            dirs: "{{ build_results.dirs }}"
            logdir: /var/tmp/
          register: install_results

        - name: Install results
          debug:
            var: install_results
            verbosity: 1

    # openafs_install updated the ansible local facts to indicate
    # where programs were installed and the paths to configuration files.
    - debug:
        msg: >
          The bosserver path is '{{ ansible_local.openafs.commands.bosserver }}'.
          The cell configuration files are in '{{ ansible_local.openafs.dirs.afsconfdir }}'.
---
- name: Prepare
  hosts: all
  tasks:
    - name: Update RedHat kernel
      when:
        - m_update_kernel | default('yes') | bool
        - ansible_os_family == 'RedHat'
      become: yes
      block:
        - name: Update kernel
          yum:
            state: latest
            name:
              - kernel
              - kernel-devel
          register: yum_update_kernel
        - name: Reboot
          reboot:
            reboot_timeout: 600
          when: yum_update_kernel.changed

- name: Build RPMs
  hosts: all
  module_defaults:
    shell:
      chdir: openafs
      executable: /bin/bash
  vars:
    appendlog: 1> >(tee -a build.out) 2> >(tee -a build.err 1>&2)
    builddir: ~/openafs
  tasks:
    - import_role:
        name: openafs_devel

    - name: Checkout source code
      git:
        repo: "{{ m_gitrepo | default('git://git.openafs.org/openafs.git') }}"
        version: "{{ m_gitref | default('master') }}"
        dest: openafs
      register: checkout_results

    - name: Autoconf
      shell:
        cmd: ./regen.sh {{ appendlog }}
        creates: configure
      register: regen_results

    - name: Generate makefile
      shell:
        cmd: ./configure --disable-kernel-module {{ appendlog }}
        creates: config.status
      register: configure_results

    - name: Create source RPM
      shell:
        cmd: make dist srpm {{ appendlog }}
      register: make_results

    - name: Create rpmbuild workspace
      file:
        state: directory
        path: "{{ builddir }}/packages/rpmbuild"
      register: mkdir_results

    - name: Set build facts
      set_fact:
        buildsdir: "{{ buildsdir | default('../builds') }}"
        workspace: "{{ mkdir_results.path }}"
        sysname: "{{ sysname | default('amd64_linux26') }}"
        dist: "{{ dist | default(ansible_distribution|lower + ansible_distribution_major_version) }}"
        arch: "{{ arch | default('x86_64') }}"

    - name: Build RPMs
      shell:
        cmd: >
          rpmbuild
          --rebuild
          --define "_topdir {{ workspace }}"
          packages/openafs-*.src.rpm
          {{ appendlog }}
      register: rpmbuild_results

    - debug:
        msg: "{{ rpmbuild_results.stdout_lines[-20:] }}"

    - find:
        paths: "{{ workspace }}/RPMS"
        recurse: yes
        file_type: file
        patterns: "*.rpm"
      register: find_results

    - set_fact:
        rpms: "{{ find_results.files | map(attribute='path') | list }}"

    - name: Download RPMs
      fetch:
        flat: yes
        src: "{{ item }}"
        dest: "~/.cache/ansible-openafs/binaries/rpms/{{ dist }}/{{ arch }}/"
      with_items: "{{ rpms }}"
      register: fetch_results

    - name: Downloaded
      debug:
        msg: "{{ fetch_results.results | map(attribute='dest') | list }}"

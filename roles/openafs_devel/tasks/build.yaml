---
#
# NOTICE: This file is deprecated.
#

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ role_path }}/vars/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/vars/defaults.yaml"

- name: Set Default Configuration Facts
  set_fact:
    _afs_devel_default_config_opts: "{{ afs_devel_configure_opts | default(_afs_devel_configure_opts) }}"
    _afs_devel_default_config_env:  "{{ afs_devel_configure_env | default(_afs_devel_configure_env) }}"

- name: Set Server/Client Configuration Facts
  set_fact:
    _afs_devel_client_opts: "{{ afs_devel_client_configure_opts | default(_afs_devel_default_config_opts) }}"
    _afs_devel_server_opts: "{{ afs_devel_server_configure_opts | default(_afs_devel_default_config_opts) }}"
    _afs_devel_client_env:  "{{ afs_devel_client_configure_env | default(_afs_devel_default_config_env) }}"
    _afs_devel_server_env:  "{{ afs_devel_server_configure_env | default(_afs_devel_default_config_env) }}"

- name: Create build directories
  become: yes
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ afs_devel_builddir }}"
    - "{{ afs_devel_destdir }}"

- name: Fetch source code
  include_tasks: "fetch-{{ afs_devel_fetch_method | lower }}.yaml"
  when:
    - afs_devel_fetch_method is defined
    - (afs_devel_fetch_method | lower) not in ['none','skip','']

- name: Generate configure
  become: yes
  command: ./regen.sh
  args:
    chdir: "{{ afs_devel_builddir }}"
    creates: configure
  register: regen_results
  failed_when: regen_results.rc != 0

- name: Clean config.status
  become: yes
  file:
    state: absent
    path: "{{ afs_devel_builddir }}/config.status"
  when: regen_results.changed

- name: Configure
  become: yes
  command: >
    ./configure
    --with-afs-sysname={{ afs_devel_sysname | default('amd64_linux26') }}
    --{{ afs_devel_build_client | ternary('enable','disable') }}-kernel-module
    {{ _afs_devel_client_opts if afs_devel_build_client else _afs_devel_server_opts }}
  environment: "{{ _afs_devel_client_env if afs_devel_build_client else _afs_devel_server_env }}"
  args:
    chdir: "{{ afs_devel_builddir }}"
    creates: config.status
  register: configure_results
  failed_when: configure_results.rc != 0

- name: Make install
  become: yes
  make:
    chdir: "{{ afs_devel_builddir }}"
    target: "{{ afs_devel_build_client | ternary('install', 'install_nolibafs') }}"
    params:
      DESTDIR: "{{ afs_devel_destdir }}"
  register: make_results

- name: Save make results
  become: yes
  copy:
    content: "{{ make_results | to_nice_json }}"
    dest: "{{ afs_devel_builddir }}/make_results"
  changed_when: false

- name: Set local facts
  set_fact:
    openafs_fact:
      commands:
        akeyconvert: /usr/sbin/akeyconvert
        aklog: /usr/bin/aklog
        asetkey: /usr/sbin/asetkey
        bos: /usr/bin/bos
        dafileserver: /usr/afs/bin/dafileserver
        dasalvager: /usr/afs/bin/dasalvager
        davolserver: /usr/afs/bin/davolserver
        fileserver: /usr/afs/bin/fileserver
        fs: /usr/bin/fs
        klog.krb5: /usr/bin/klog.krb5
        pagsh: /usr/bin/pagsh
        ptserver: /usr/afs/bin/ptserver
        pts: /usr/bin/pts
        rxdebug: /usr/sbin/rxdebug
        salvager: /usr/afs/bin/salvager
        salvageserver: /usr/afs/bin/salvageserver
        tokens: /usr/bin/tokens
        udebug: /usr/bin/udebug
        unlog: /usr/bin/unlog
        vlserver: /usr/afs/bin/vlserver
        volserver: /usr/afs/bin/volserver
        vos: /usr/sbin/vos
      dirs:
        afsbosconfigdir: /usr/afs/local
        afsconfdir: /usr/afs/etc
        afsdbdir: /usr/afs/db
        afslocaldir: /usr/afs/local
        afslogdir: /usr/afs/logs
        afssrvdir: /usr/afs/bin
        viceetcdir: /usr/vice/etc

- name: Make local facts directory
  become: yes
  file:
    state: directory
    path: /etc/ansible/facts.d

- name: Save local facts
  become: yes
  copy:
    dest: /etc/ansible/facts.d/openafs.fact
    content: "{{ openafs_fact | to_nice_json }}"
  register: save_local_facts

- name: Reload facts
  setup:
  when: save_local_facts.changed

- name: Finalize destination directory
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ role_path }}/tasks/post-build/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/tasks/post-build/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/tasks/post-build/{{ ansible_distribution }}.yaml"
    - "{{ role_path }}/tasks/post-build/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/unknown.yaml"
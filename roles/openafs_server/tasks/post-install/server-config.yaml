---
#
# Update the server configuration files:
#
#   - ThisCell
#   - CellServDB
#   - BosConfig (via BosConfig.new)
#   - krb.conf (if the realm name is different than the cell name)
#
# We cannot change the BosConfig directly since the bosserver may be
# running, so create a shadow config file called BosConfig.ansible and
# if that file is changed, create a BosConfig.new and notify a handler
# to restart the bosserver to pivot the BosConfig.new to BosConfig
# and load the new configuration.
#

- name: Create configuration directories
  become: yes
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - path: "{{ afs_afslocaldir }}"
      mode: "700"
    - path: "{{ afs_afsconfdir }}"
      mode: "700"
    - path: "{{ afs_afsbosconfigdir }}"
      mode: "755"

- name: Create configuration files
  become: yes
  template:
    src: "{{ role_path }}/templates/{{ item.name }}.j2"
    dest: "{{ item.path }}/{{ item.name }}"
    owner: root
    group: root
    mode: "644"
  loop:
    - name: ThisCell
      path: "{{ afs_afsconfdir }}"
    - name: CellServDB
      path: "{{ afs_afsconfdir }}"
    - name: BosConfig.ansible
      path: "{{ afs_afsbosconfigdir }}"
  register: config_files

- name: Create BosConfig.new file
  become: yes
  copy:
    src: "{{ afs_afsbosconfigdir }}/BosConfig.ansible"
    dest: "{{ afs_afsbosconfigdir }}/BosConfig.new"
    remote_src: yes
  when: (config_files.results | selectattr('dest', 'search', 'BosConfig') | list)[0].changed
  notify:
    - Restart OpenAFS servers

- name: Create krb.conf
  become: yes
  copy:
    content: "{{ afs_realm }}"
    dest: "{{ afs_afsconfdir }}/krb.conf"
    mode: "644"
    owner: root
    group: root
  when: afs_realm != afs_cell.upper()

# todo:
#   - NetInfo

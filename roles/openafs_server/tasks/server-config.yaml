---
- name: Make local directory
  run_once: true
  delegate_to: localhost
  file:
    path: "{{ afs_local_dir }}"
    state: directory
    mode: 0755

- name: Generate cell configuration files
  run_once: true
  delegate_to: localhost
  template:
    src: "{{ item }}.j2"
    dest: "{{ afs_local_dir }}/{{ item }}"
  with_items:
    - CellServDB
    - ThisCell
    - UserList

- name: Create the Kerberos service key
  become: yes
  command: >
    {{ afs_kadmin }}
    -w {{ afs_admin_password }}
    -p {{ afs_admin_principal }}@{{ afs_realm }}
    -r "{{ afs_realm }}"
    -q "add_principal -randkey afs/{{ afs_cell }}@{{ afs_realm }}"
  register: kadmin_results
  changed_when: >
    kadmin_results.rc == 0
    and not "already exists while creating" in kadmin_results.stderr
  when: inventory_hostname == ansible_play_hosts[0]

- name: Create cell configuation directory
  become: yes
  file:
    state: directory
    path: "{{ afs_afsconfdir }}"
    mode: 0755
    owner: root
    group: root

- name: Update cell configuration
  become: yes
  copy:
    src: "{{ afs_local_dir }}/{{ item }}"
    dest: "{{ afs_afsconfdir }}/{{ item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - CellServDB
    - ThisCell
    - UserList

- name: Set authentication realm
  become: yes
  copy:
    content: "{{ afs_realm }}"
    dest: "{{ afs_afsconfdir }}/krb.conf"
    mode: 0644
    owner: root
    group: root
  when: afs_realm is defined and afs_realm.lower() != afs_cell

- name: Create local server directory
  become: yes
  file:
    state: directory
    path: "{{ afs_afslocaldir }}"
    mode: 0700
    owner: root
    group: root

- name: Update local server configuration
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "{{ afs_afslocaldir }}/{{ item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - NetInfo
  notify:
    - Restart OpenAFS servers

- name: Create the bosserver configuration directory
  become: yes
  file:
    state: directory
    path: "{{ afs_bosconfdir }}"
    owner: root
    group: root

- name: Check the bosserver configuration
  become: yes
  template:
    src: "BosConfig.new.j2"
    dest: "{{ afs_bosconfdir }}/BosConfig.ansible"
    mode: 0644
    owner: root
    group: root
  register: bosconfig

- name: Update the bosserver configuration
  become: yes
  copy:
    src: "{{ afs_bosconfdir }}/BosConfig.ansible"
    dest: "{{ afs_bosconfdir }}/BosConfig.new"
    remote_src: yes
  when: bosconfig.changed
  notify:
    - Restart OpenAFS servers

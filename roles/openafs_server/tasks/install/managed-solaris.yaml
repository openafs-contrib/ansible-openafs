---
- name: "Get current publishers."
  command: pkg publisher -H
  register: publisher_results
  changed_when: no

- name: "Set OpenAFS publisher."
  become: yes
  command:
    cmd: "pkg set-publisher -g {{ repo }} {{ afs_pkg5_publisher }}"
  when: not '{{ afs_pkg5_publisher }}' in publisher_results.get('stdout', '')
  loop:
    - "{{ afs_pkg5_repo }}"
  loop_control:
    loop_var: repo

- name: "Install OpenAFS server packages."
  become: yes
  community.general.pkg5:
    state: present
    accept_licenses: yes
    name:
      - openafs-server
      - openafs-krb5

- name: "Get installation paths."
  openafs_contrib.openafs.openafs_get_install_paths:
  register: install_results

- name: "Store installation facts."
  become: yes
  openafs_contrib.openafs.openafs_store_facts:
    state: update
    facts:
      install_method: "{{ afs_install_method }}"
      server_installed: yes
      server_service_name: "svc:/network/openafs/server"
      bins: "{{ install_results.bins }}"
      dirs: "{{ install_results.dirs }}"
  when: not ansible_check_mode

- assert:
    that:
      - ansible_local.openafs.dirs.afsbosconfigdir is defined
      - ansible_local.openafs.dirs.afsconfdir is defined
      - ansible_local.openafs.dirs.afsdbdir is defined
      - ansible_local.openafs.dirs.afslocaldir is defined

- name: "Set bosserver startup options."
  become: yes
  openafs_contrib.openafs.openafs_service_property:
    state: present
    service: "{{ ansible_local.openafs.server_service_name }}"
    property: "bosserver/arguments"
    value: "{{ afs_bosserver_opts }}"
    single: no
  register: service_property_results
  when: afs_bosserver_opts is defined
  notify:
    - "server configuration changed"

---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ role_path }}/vars/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_distribution }}.yaml"
    - "{{ role_path }}/vars/{{ ansible_os_family }}.yaml"
    - "{{ role_path }}/vars/defaults.yaml"

# Debian based systems add a loopback address for the hostname as
# a fallback when dns is unavailable. These can cause issues when
# trying to update the vldb.
- name: Avoid resolving the hostname to a loopback address
  become: yes
  replace:
    path: /etc/hosts
    backup: yes
    regexp: '^127.0.1.1\b(.*)\b{{ ansible_host | replace(".", "\.") }}\b'
    replace: '{{ ansible_default_ipv4.address }} \1 {{ ansible_host }}'

- include_tasks: "system-{{ afs_firewall }}.yaml"
  when: afs_firewall is defined

- name: Setup SELinux policies
  include_tasks: selinux-policies.yaml
  when: ansible_selinux is defined and ansible_selinux.get('status') == 'enabled'

- import_tasks: server-partitions.yaml

- name: Install packages
  include_tasks: "{{ item }}"
  with_first_found:
    - "install-packages/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
    - "install-packages/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yaml"
    - "install-packages/{{ ansible_distribution }}.yaml"
    - "install-packages/{{ ansible_os_family }}.yaml"
    - "install-packages/unknown.yaml"

- import_tasks: server-config.yaml

- import_tasks: server-key.yaml

- include_tasks: selinux-contexts.yaml
  when: ansible_selinux is defined and ansible_selinux.get('status') == 'enabled'

- name: Start the OpenAFS servers
  become: yes
  service:
    name: "{{ afs_server_service }}"
    state: started
    enabled: yes
  register: afs_server_service_result

- include_tasks: cell-bootstrap.yaml
  when: inventory_hostname == ansible_play_hosts[0]

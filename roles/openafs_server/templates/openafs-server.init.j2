#!/bin/bash
#
# Copyright (c) 2014-2017, Sine Nomine Associates
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THE SOFTWARE IS PROVIDED 'AS IS' AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#----------------------------------------------------------------------
# Basic init script to start/stop the OpenAFS servers.
#----------------------------------------------------------------------
# chkconfig: 2345 49 51
#----------------------------------------------------------------------

if [ -f /etc/rc.d/init.d/functions ] ; then
    . /etc/rc.d/init.d/functions
fi

is_on() {
    if  test "$1" = "on" ; then return 0
    else return 1
    fi
}

BOSSERVER_OPTIONS="{{ afs_bosserver_opts }}"
BOS={{ afs_bos }}
BOSSERVER={{ afs_bosserver }}

start() {
    if [ ! -f /var/lock/subsys/openafs-server ]; then
        if test -x $BOSSERVER ; then
            echo "Starting AFS servers..... "
            $BOSSERVER $BOSSERVER_OPTIONS
            if [ $? -ne 0 ]; then
                echo "Failed to start bosserver!"
                exit 1
            fi
            touch /var/lock/subsys/openafs-server
            if is_on $WAIT_FOR_SALVAGE; then
                sleep 10
                while $BOS status localhost fs 2>&1 | grep 'Auxiliary.*salvaging'; do
                    echo "Waiting for salvager to finish..... "
                    sleep 10
                done
            fi
        fi
    else
            echo "AFS servers already running."
    fi
}

stop() {
    if [ -f /var/lock/subsys/openafs-server ]; then
        if  test -x $BOS ; then
            echo "Stopping AFS servers..... "
            $BOS shutdown localhost -localauth -wait
            pkill -HUP bosserver
        fi
        rm -f /var/lock/subsys/openafs-server
    fi
}

case "$1" in
  start)
      start
      ;;
  stop)
      stop
      ;;
  restart)
      $0 stop
      $0 start
      ;;
  *)
      echo $"Usage: $0 {start|stop|restart}"
      exit 1
esac

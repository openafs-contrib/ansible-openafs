---
# Kerberos and AFS admin password (read from a local file by default).
afs_admin_password: "{{ lookup('password', afs_local_dir+'/afs_admin_password chars=ascii_letters,digits,hexdigits length=15') }}"

# Install a webserver to publish test results; yes or no
afs_robotest_install_webserver: yes

# git repo and version of openafs-robotest to be installed.
afs_robotest_git_repo: "https://github.com/openafs-contrib/openafs-robotest.git"
afs_robotest_version: master

# Username to run the tests.
afs_robotest_user: "{{ ansible_user_id }}"

# Test suite top level directory.
afs_robotest_home: "/home/{{ afs_robotest_user }}/openafs-robotest"

# Test config file directory.
afs_robotest_confdir: "/home/{{ afs_robotest_user }}/.openafs-robotest"

# Test exclusion tags.
afs_robotest_exclude_tags:
  - bug
  - slow
  - rogue-avoidance

# Output logging level.
afs_robotest_loglevel: INFO

# Report output location.
afs_robotest_outputdir: "/home/{{ afs_robotest_user }}/public_html/openafs-robotest-output"

# The test fileserver(s).
afs_robotest_fileservers: "{{ groups['afs_fileservers'][0] }}"

# path to kinit?
# afs_kinit:

# Paths
afs_aklog: "{{ ansible_local.openafs.paths['aklog'] }}"
afs_asetkey: "{{ ansible_local.openafs.paths['asetkey'] }}"
afs_akeyconvert: "{{ ansible_local.openafs.paths['akeyconvert'] }}"
afs_bos: "{{ ansible_local.openafs.paths['bos'] }}"
afs_fs: "{{ ansible_local.openafs.paths['fs'] }}"
afs_klog_krb5: "{{ ansible_local.openafs.paths['klog.krb5'] }}"
afs_pagsh: "{{ ansible_local.openafs.paths['pagsh'] }}"
afs_pts: "{{ ansible_local.openafs.paths['pts'] }}"
afs_rxdebug: "{{ ansible_local.openafs.paths['rxdebug'] }}"
afs_tokens: "{{ ansible_local.openafs.paths['tokens'] }}"
afs_udebug: "{{ ansible_local.openafs.paths['udebug'] }}"
afs_unlog: "{{ ansible_local.openafs.paths['unlog'] }}"
afs_vos: "{{ ansible_local.openafs.paths['vos'] }}"
